<?php

namespace AppBundle\Repository;

use AppBundle\Entity\GrupoAtuacao;
use AppBundle\Entity\Projeto;

/**
 * GrupoAtuacaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GrupoAtuacaoRepository  extends RepositoryAbstract
{
    /**
     * @param integer $coProjeto
     * @return GrupoAtuacao[]
     */
    public function findByProjeto($coProjeto)
    {

        $qb = $this->createQueryBuilder('ga');
        $qb
            ->join('ga.areasTematicasGruposAtuacao', 'atga')
            ->join('atga.areaTematica', 'at')
            ->join('ga.projetoPessoaGrupoAtuacao', 'ppga')
            ->join('ppga.projetoPessoa', 'pp')
            ->join('pp.pessoaPerfil', 'pper')
            ->join('pper.perfil', 'per')
            ->join('pper.pessoaFisica', 'pf')
            ->join('pf.pessoa', 'p')
            ->where('at.projeto = :projeto')
            ->andWhere("ga.stRegistroAtivo = 'S'")
            ->setParameter('projeto', $coProjeto)
            ->add('orderBy', 'ga.noGrupoAtuacao, per.dsPerfil, p.noPessoa ASC');

        return $qb->getQuery()->getResult();
    }

    /**
     * @param integer $coProjeto
     * @return GrupoAtuacao[]
     */
    public function findGrupoByProjeto($coProjeto, $areaTematica = null)
    {
        $qb = $this->createQueryBuilder('ga');
        $qb
            ->join('ga.areasTematicasGruposAtuacao', 'atga')
            ->join('atga.areaTematica', 'at')
            ->join('at.tipoAreaTematica', 'tp')
            ->where('at.projeto = :projeto')
            ->andWhere("ga.stRegistroAtivo = 'S'")
            ->andWhere("atga.stRegistroAtivo = 'S'")
            ->andWhere("at.stRegistroAtivo = 'S'")
            ->andWhere("tp.stRegistroAtivo = 'S'")
            ->setParameter('projeto', $coProjeto)
            ->add('orderBy', 'ga.noGrupoAtuacao ASC');

        if(!empty($areaTematica)){
            $qb->andWhere('at.coSeqAreaTematica = :coSeqAreaTematica')
                ->setParameter('coSeqAreaTematica', $areaTematica);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * @param Projeto $projeto
     * @return GrupoAtuacao[]
     */
    public function findGruposTutorialConfirmadoByProjeto(Projeto $projeto)
    {
        return $this->findBy([
            'projeto' => $projeto,
            'stRegistroAtivo' => 'S',
            'stConfirmacao' => 'S',
        ]);
    }

    /**
     * @param integer $coProjeto
     * @param integer $coGrupoAtuacao
     * @return GrupoAtuacao[]
     */
    public function findByProjetoAndId($coProjeto, $coGrupoAtuacao)
    {
        $qb = $this->createQueryBuilder('ga');
        $qb
            ->where('ga.projeto = :projeto')
            ->andWhere("ga.stRegistroAtivo = 'S'")
            ->setParameter('projeto', $coProjeto);

        return $qb->getQuery()->getResult();
    }

}