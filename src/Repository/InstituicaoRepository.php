<?php

namespace App\Repository;

use App\Entity\Municipio;
use App\Entity\AgenciaBancaria;
use App\Repository\RepositoryAbstract;
use Doctrine\Persistence\ManagerRegistry;
use Symfony\Component\HttpFoundation\ParameterBag;

/**
 * InstituicaoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InstituicaoRepository extends RepositoryAbstract
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, AgenciaBancaria::class);
    }

    /**
     * @param ParameterBag $pb
     * @return \App\Entity\Instituicao[]
     */
    public function findByFilter(ParameterBag $pb)
    {
        $qb = $this->createQueryBuilder('i');
        $qb->select('i, pj')
           ->join('i.pessoaJuridica', 'pj');

        if (!is_null($pb->get('nuCnpj')) && $pb->get('nuCnpj') != '' ) {
            $cnpj = preg_replace("/[^0-9]/", "", $pb->get('nuCnpj'));
            $qb->andWhere('pj.nuCnpj = :nuCnpj')
               ->setParameter('nuCnpj',$cnpj);
        }

        if (!is_null($pb->get('noInstituicaoProjeto')) && $pb->get('noInstituicaoProjeto') != '') {
            $qb->andWhere('upper(i.noInstituicaoProjeto) like :noInstituicaoProjeto')
               ->setParameter('noInstituicaoProjeto', '%' . mb_strtoupper($pb->get('noInstituicaoProjeto')) . '%');
        }

        $qb->orderBy('i.noInstituicaoProjeto', 'asc');
        $qb->orderBy('i.stRegistroAtivo ', 'DESC');

        return $qb;
    }

    /**
     * @param Municipio $municipio
     * @param boolean $returnArrayResult
     * @return \App\Entity\Instituicao[] | array
     */
    public function findByMunicipio(Municipio $municipio, $returnArrayResult = true)
    {
        $qb = $this->createQueryBuilder('i');
        $qb
            ->select('i, pj')
            ->join('i.pessoaJuridica', 'pj')
            ->andWhere("i.stRegistroAtivo = 'S'")
            ->andWhere('identity(i.municipio) = :municipio')
            ->setParameter('municipio', $municipio->getCoMunicipioIbge())
            ->orderBy('i.noInstituicaoProjeto', 'asc');
        
        if ($returnArrayResult) {
            return $qb->getQuery()->getArrayResult();
        }
        
        return $qb->getQuery()->getResult();
    }    
}
