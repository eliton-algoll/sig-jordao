<?php

namespace App\Repository;

use App\Entity\Instituicao;
use App\Entity\AgenciaBancaria;
use App\Repository\RepositoryAbstract;
use Doctrine\Persistence\ManagerRegistry;
use Symfony\Component\HttpFoundation\ParameterBag;

/**
 * CampusInstituicaoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CampusInstituicaoRepository extends RepositoryAbstract
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, AgenciaBancaria::class);
    }
    
    /**
     * @param Instituicao $instituicao
     * @param boolean $returnArrayResult
     * @return \App\Entity\CampusInstituicao[] | array
     */
    public function findByInstituicao(Instituicao $instituicao, $returnArrayResult = true)
    {
        $qb = $this->createQueryBuilder('c');
        $qb
            ->select('c.noCampus, c.coSeqCampusInstituicao, pj.nuCnpj')
            ->join('c.instituicao', 'i')
            ->join('i.pessoaJuridica', 'pj')
            ->andWhere("c.stRegistroAtivo = 'S'")
            ->andWhere('identity(c.instituicao) = :instituicao')
            ->setParameter('instituicao', $instituicao->getCoSeqInstituicao())
            ->orderBy('c.noCampus', 'asc');
        
        if ($returnArrayResult) {
            return $qb->getQuery()->getArrayResult();
        }
        
        return $qb->getQuery()->getResult();
    }

    /**
     * @param ParameterBag $pb
     * @return \App\Entity\CampusInstituicao[]
     */
    public function findByFilter(ParameterBag $pb)
    {
        $qb = $this->createQueryBuilder('c');
        $qb->select('c, i')
            ->join('c.instituicao', 'i');

        if (!is_null($pb->get('noCampus')) && $pb->get('noCampus') != '') {
            $qb->andWhere('upper(c.noCampus) like :noCampus')
                ->setParameter('noCampus', '%' . mb_strtoupper($pb->get('noCampus')) . '%');
        }

        $qb->orderBy('c.noCampus', 'ASC');
        $qb->addOrderBy('c.stRegistroAtivo ', 'DESC');

        return $qb;
    }

}
