<?php

namespace App\Repository;

use App\Entity\Perfil;
use App\Entity\Projeto;
use App\Entity\GrupoAtuacao;
use App\Entity\ProjetoPessoaGrupoAtuacao;
use App\Repository\RepositoryAbstract;
use Doctrine\Persistence\ManagerRegistry;

/**
 * ProjetoPessoaGrupoAtuacaoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjetoPessoaGrupoAtuacaoRepository extends RepositoryAbstract
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, ProjetoPessoaGrupoAtuacao::class);
    }
    
    /**
     * @param \App\Entity\Projeto|integer $projeto
     * @return \App\Entity\ProjetoPessoa[]
     */
    public function findByProjeto($projeto)
    {
        $projeto = ($projeto instanceof Projeto) ? $projeto->getCoSeqProjeto() : $projeto;
        
        $qb = $this->createQueryBuilder('ppga');
        
        return $qb->select('ppga, pp, pper, per, pf, p, ga, atga, at, tat')
            ->innerJoin('ppga.projetoPessoa', 'pp')
            ->innerJoin('pp.pessoaPerfil', 'pper')
            ->innerJoin('pper.perfil', 'per')
            ->innerJoin('pper.pessoaFisica', 'pf')
            ->innerJoin('pf.pessoa', 'p')
            ->innerJoin('ppga.grupoAtuacao', 'ga')
            ->innerJoin('ga.areasTematicasGruposAtuacao', 'atga')
            ->innerJoin('atga.areaTematica', 'at')
            ->innerJoin('at.tipoAreaTematica', 'tat')            
            ->where($qb->expr()->eq('pp.projeto', ':coProjeto'))
            ->setParameter('coProjeto', $projeto)
            ->getQuery()
            ->getResult();
    }
    
    public function hasPerfilNaoVoluntario($projeto, $grupoAtuacao, $perfil)
    {
        $coProjeto = ($projeto instanceof Projeto) ? $projeto->getCoSeqProjeto() : $projeto;
        $coGrupoAtuacao = ($grupoAtuacao instanceof GrupoAtuacao) ? $grupoAtuacao->getCoSeqGrupoAtuacao() : $grupoAtuacao;
        $coPerfil = ($perfil instanceof Perfil) ? $perfil->getCoSeqPerfil() : $perfil;
        
        $qb = $this->createQueryBuilder('ppga');
        
        $result = $qb->select('ppga.coSeqProjpesGrupoatuac, p.noPessoa')
            ->innerJoin('ppga.projetoPessoa', 'pp')
            ->innerJoin('pp.pessoaPerfil', 'pper')
            ->innerJoin('pper.perfil', 'per')
            ->innerJoin('pper.pessoaFisica', 'pf')
            ->innerJoin('pf.pessoa', 'p')
            ->where('pp.projeto = :coProjeto')
            ->setParameter('coProjeto', $coProjeto)
            ->andWhere('ppga.grupoAtuacao = :coGrupoAtuacao')
            ->setParameter('coGrupoAtuacao', $coGrupoAtuacao)
            ->andWhere('per.coSeqPerfil = :coPerfil')
            ->setParameter('coPerfil', $coPerfil)
            ->andWhere("pp.stVoluntarioProjeto = 'N'")
            ->andWhere("ppga.stRegistroAtivo = 'S'")
            ->andWhere("pp.stRegistroAtivo = 'S'")
            ->andWhere("pper.stRegistroAtivo = 'S'")
            ->andWhere("per.stRegistroAtivo = 'S'")
            ->getQuery()
            ->getOneOrNullResult();
        
        if(is_null($result)) {
            $result = false;
        }
        
        return $result;
    }

    /**
     * @param GrupoAtuacao $grupoAtuacao
     * @return \App\Entity\ProjetoPessoaGrupoAtuacao[]
     */
    public function findByGrupoAtuacao(GrupoAtuacao $grupoAtuacao)
    {
        $qb = $this->createQueryBuilder('ppga');

        return $qb
            ->select('ppga, pp, pperf, perfil, pf, p, ppcg, pcg, ppgaat, at, tat')
            ->innerJoin('ppga.projetoPessoa', 'pp')
            ->innerJoin('pp.pessoaPerfil', 'pperf')
            ->innerJoin('pperf.perfil', 'perfil')
            ->innerJoin('pperf.pessoaFisica', 'pf')
            ->innerJoin('pf.pessoa', 'p')
            ->leftJoin('pp.projetoPessoaCursoGraduacao', 'ppcg')
            ->leftJoin('ppcg.cursoGraduacao', 'pcg', 'WITH', 'ppcg.cursoGraduacao = pcg.coSeqCursoGraduacao')
            ->leftJoin('ppga.projetosPessoasGrupoAtuacaoAreasTematicas', 'ppgaat')
            ->leftJoin('ppgaat.areaTematica', 'at')
            ->leftJoin('at.tipoAreaTematica', 'tat')
            ->where('ppga.grupoAtuacao = :grupoAtuacao')
            ->andWhere('ppga.stRegistroAtivo = :stAtivo')
            ->andWhere('pp.stRegistroAtivo = :stAtivo')
            ->setParameter('grupoAtuacao', $grupoAtuacao)
            ->setParameter('stAtivo', 'S')
            ->orderBy('pp.stRegistroAtivo', 'DESC')
            ->addOrderBy('pp.stVoluntarioProjeto')
            ->addOrderBy('perfil.dsPerfil')
            ->getQuery()
            ->getResult();
    }
}